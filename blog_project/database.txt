> schema (게요)
컬렉션에 들어가는 문서 내부의 각 필드가 어떤 형식으로 되어 있는지 정의하는 객체
스키마의 형식에 맞춰 모델이라는 인스턴스를 만든다.

ex) {
    title : String,
    active : Boolean,
    date:Date...
}
=============> model=================> database


스키마는 몽구스의 schema를 사용하여 정의한다.
각 필드 이름과 필드의 데이터 타입 정보가 들어 있는 객체를 작성한다.
필드의 기본값으로 default값을 설정해줄 수도 있다.

const {Schema} = mongoose

const PostSchema = new Schema({
    title : String,
    content :String,
    tags:[String], // 문자열로 이루어진 배열
    date :{
        type : Date,
        default : Date.now // 현재 날짜를 기본값으로
    }
})







> model
스키마의 형식에 맞춰 모델이라는 인스턴스를 만들어, 데이터베이스에서 실제 작업을 처리할 수 있는 함수들을 지니고 있는 객체이다.


비유를 하지면 schema는 class , model은 instance

모델을 만들기 위해서는 mongoose.model() 메서드를 사용해주면 된다.
이 때 두가지 파라미터가 필요한데 첫 번째는 스키마의 이름이고 두 번째는 스키마 객체이다.

첫 번째 파라미터로 할당한 스키마 이름은 데이터베이스 컬렉션 이름이 된다.
이 때 데이터베이스 컬렉션 이름은 스키마 이름의 복수형이 된다.

예) const Post = mongoose.model("Post",PostSchema)

Post는 스키마의 이름이 되고 이를 참조하여 데이터 컬렉션의 이름은 posts라는 이름을 갖게 된다.





(데이터베이스 컬렉션?)