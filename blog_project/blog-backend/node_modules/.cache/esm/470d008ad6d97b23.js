let Koa,Router,bodyParser,mongoose,api,jwtMiddleware;_d6d‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_d6d‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_d6d‍.w("koa-bodyparser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_d6d‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_d6d‍.w("./api/index",[["default",["api"],function(v){api=v}]]);_d6d‍.w("./lib/jwtMiddleware",[["default",["jwtMiddleware"],function(v){jwtMiddleware=v}]]);require('dotenv').config();







const { PORT, MONGO_URI } = process.env;

mongoose
  .connect(MONGO_URI)
  .then(() => {
    console.log('Connected to MonogoDB');
  })
  .catch((e) => {
    _d6d‍.g.console.error(e);
  });

const app = new Koa();
const router = new Router();

router.use('/api', api.routes()); // nest routing

// 라우터 적용 전에 bodyparser 적용
app.use(bodyParser());
app.use(jwtMiddleware);
app.use(router.routes()).use(router.allowedMethods());

const port = PORT || 4000;
app.listen(port, () => {
  console.log(`Listening to port ${port}`);
});
