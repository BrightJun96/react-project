let Router,list,write,read,remove,update,checkOwnPost,getPostById,postLikeUpdate,checkLoggedIn;_ef3‍.x([["default",()=>_ef3‍.o]]);_ef3‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_ef3‍.w("./posts.ctrl",[["list",["list"],function(v){list=v}],["write",["write"],function(v){write=v}],["read",["read"],function(v){read=v}],["remove",["remove"],function(v){remove=v}],["update",["update"],function(v){update=v}],["checkOwnPost",["checkOwnPost"],function(v){checkOwnPost=v}],["getPostById",["getPostById"],function(v){getPostById=v}],["postLikeUpdate",["postLikeUpdate"],function(v){postLikeUpdate=v}]]);_ef3‍.w("../../lib/checkLoggedIn",[["default",["checkLoggedIn"],function(v){checkLoggedIn=v}]]);











const posts = new Router();

posts.get("/", list);
posts.post("/", checkLoggedIn, write);

// !!!!!!!!오타주의!!!!!!!!!!!!!!!!!!
const post = new Router();

post.get("/", read);
post.delete("/", checkLoggedIn, checkOwnPost, remove);
post.patch("/", checkLoggedIn, checkOwnPost, update);
post.patch("/", checkLoggedIn, checkOwnPost, postLikeUpdate);

posts.use("/:id", getPostById, post.routes());

_ef3‍.d(posts);
